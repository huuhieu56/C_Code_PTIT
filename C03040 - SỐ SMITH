#include<stdio.h>
#include<math.h>
#include<string.h>

int isPrime (long long n) {
    if (n==2 || n==3) return 1;
    if (n%2==0 || n<2) return 0;
    for (long long i=2; i<=sqrt(n); i++) {
        if (n%i==0) return 0;
    }
    return 1;
}

long long get_sum_digit (long long n) {
    long long sum = 0;
    while (n) {
        sum += n%10;
        n /= 10;
    }
    return sum;
}

long long get_sum_prime (long long n) {
    long long sum = 0;
    long long cur_prime = 2;
    while (n!=1) {
        while (n%cur_prime==0 && isPrime(cur_prime) && n!= 1) {
            sum += get_sum_digit(cur_prime);
            n /= cur_prime;
        }
        cur_prime++;
    }
    return sum;
}

int check(long long n) {
    return get_sum_digit(n) == get_sum_prime(n);
}

int main () {
    long long n;
    scanf("%lld", &n);
    if (check(n)) {
        printf("YES");
    }
    else{
        printf("NO");
    }
    return 0;
}